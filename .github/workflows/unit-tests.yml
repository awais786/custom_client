name: Tests Workflow

on:
  push:
    branches:
      - '*'  # Runs on push events to any branch
  pull_request:
    branches:
      - '*'  # Runs on pull requests to any branch

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # Define the Django service to run on the test server
      django:
        image: python:3.11
        ports:
          - 8000:8000
        options: --health-cmd "curl --silent --fail http://localhost:8000 || exit 1" --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python 3.x
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Specify the Python version

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./mockserver/testapp/requirements.txt 

    # Step 4: Run migrations (if needed)
    - name: Apply database migrations
      run: |
        python ./mockserver/manage.py migrate

    # Step 5: Start Django server
    - name: Start Django server
      run: |
        python ./mockserver/manage.py runserver 0.0.0.0:8000 &
        # Allow the server to start up
        sleep 10

    # Step 6: Run tests
    - name: Run Tests
      env:
        SECRET_KEY: 69tgugtg%^fgJO&*&
        DB_NAME: mydb
        DB_USER: userdb
        DB_PASSWORD: password
        DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 [::1]
        DEBUG_MODE: False
        TIME_ZONE: Africa/Bangui
        CACHE_KEY_PREFIX: Halo
      run: |
        python ./mockserver/manage.py test
